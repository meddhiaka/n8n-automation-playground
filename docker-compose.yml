version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: n8n-postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - n8n-network

  n8n:
    image: n8nio/n8n:1.84.3
    container_name: n8n
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_SCHEMA=public
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - WEBHOOK_TUNNEL_URL=https://${URL}
      - N8N_EDITOR_BASE_URL=https://${URL}
      - WEBHOOK_URL=https://${URL}
      - TZ=${TIMEZONE}
      - GENERIC_TIMEZONE=${TIMEZONE}
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - n8n-network

  ngrok:
    image: ngrok/ngrok:3-alpine
    container_name: n8n-ngrok
    environment:
      - NGROK_AUTHTOKEN=${NGROK_TOKEN}
    command:
      - "http"
      - "--domain=${URL}"
      - "n8n:5678"
    networks:
      - n8n-network
    depends_on:
      - n8n

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local

networks:
  n8n-network:
    driver: bridge